import axios from "axios";
import React, { useState, useEffect } from "react";
import { Loader, Card, FormField } from "../components";

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);
  const [searchText, setSearchText] = useState("");

  const [searchedResults, setSearchedResults] = useState(null);
  const [searchTimeout, setSearchTimeout] = useState(null);

  useEffect(() => {
    const fetchPosts = () => {
      axios
        .get("https://dall-e-4oni.onrender.com/api/v1/post/")
        .then((res) => {
          if (res.data) {
            //console.log(res.data.data);
            setAllPosts(res.data.data);
          }
        })
        .catch((err) => {
          console.log(err);
        });
    };

    fetchPosts();
  }, []);

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);
    setLoading(true);
    setSearchTimeout(
      setTimeout(() => {
        const searchResults = allPosts.filter((item) => {
          return (
            item.name.toLowerCase().includes(searchText.toLowerCase()) ||
            item.prompt.toLowerCase().includes(searchText.toLowerCase())
          );
        });
        setSearchedResults(searchResults);
        setLoading(false);
      }, 500)
    );
  };

  const RenderCard = ({ data, title }) => {
    if (data?.length > 0) {
      return data.map((post) => <Card key={post._id} {...post} />);
    }
    return (
      <h2 className="mt-5 font-bold text-black text-xl uppercase">{title}</h2>
    );
  };

  return (
    <div>
      <section className="max-w-7xl mx-auto">
        <div>
          <h1 className="font-extrabold text-[#222328] text-[32px] ">
            The Community Showcase
          </h1>
          <p className="mt-2 text-[#666e75] text-[14px] max-w-[500px]">
            Browse through a collection of imagination and visually stunning
            images generated by{" "}
            <span className="font-inter font-bold">Imagicnation.</span>
          </p>
        </div>

        <div className="mt-16">
          <FormField
            LabelName="Search Posts"
            type="text"
            name="text"
            placeholder="Search Posts"
            value={searchText}
            handleChange={handleSearchChange}
          />
        </div>

        <div>
          {loading ? (
            <div className="flex justify-center items-center mt-10">
              <Loader />
            </div>
          ) : (
            <>
              {searchText && (
                <h2 className="font-medium text-[#666e75] text-xl mb-3 mt-5">
                  Showing results for{" "}
                  <span className="text-[#222328]">{searchText}</span>
                </h2>
              )}
              <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3 mt-10">
                {searchText ? (
                  <RenderCard
                    data={searchedResults}
                    title={`Sorry, Not found!`}
                  />
                ) : (
                  <RenderCard data={allPosts} title="No posts found" />
                )}
              </div>
            </>
          )}
        </div>
      </section>
    </div>
  );
};

export default Home;
